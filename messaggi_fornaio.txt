process biglietteria{
	int MAX = 100
	int daServire = 0, ultimo = 0;
	int nrClienti = 0
	process biglietti[0,MAX-1];
	port signal prendiNumero, prossimoCliente, uscitaCliente;
	signal s;
	process p;

	do
		(nrClienti < MAX); p = receive (s) form prendiNumero; ->
		{
			nrClienti ++;
			ultimo = (ultimo + 1) % MAX;
			biglietti[ultimo]= p;
		}

		(ultimo != daServire) -> p = receive (s) from prossimoCliente; ->
		{
			daServire = (daServire + 1) % MAX; 
			send (s) to biglietti[daServire].turno;
		}
	
		p = receive (s) from uscitaCliente; ->
		{
			nrClienti --;
			send (s) to fornaio.fineServizio
		} 
	od
}

process fornaio{
	signal s;
	process p;
	port signal ordinazione, fineServizio;

	loop forever
		send (s) to biglietteria.prossimoCliente;
		p = receive (s) from ordinazione;
		<prepara ordine>
		send (s) to p.servizio;
		p = receive (s) to fineServizio;
}

process cliente[i]{
	signal s;
	process p;
	port signal turno, servizio;

	send (s) to biglietteria.prendiNumero;
	p = receive (s) from turno;
	<effettua ordine>
	send (s) to fornaio.ordinazione;
	p = receive (s) from servizio;
	send (s) to biglietteria.uscita;
}
