process biglietteria{
	int MAX = 100
	int bigliettoDaServire = 1; 
	int ultimo = 1;
	int nrClienti = 0
	entry prendiNumero(out int numeroBiglietto);
	entry prossimoCliente(out int prossimoBiglietto);
	entry uscitaCliente;

	do
		(nrClienti < MAX);  accept prendiNumero(out int numeroBiglietto) {
				numeroBiglietto = ultimo;
			}; -> 
			nrClienti ++;
			ultimo = (ultimo + 1) % MAX;

		(nrClienti != 0); accept prossimoCliente(out int prossimoBiglietto) {
				prossimoBiglietto = bigliettoDaServire
			}; ->
			bigliettoDaServire = (bigliettoDaServire + 1) % MAX; 
		
		accept uscitaCliente; ->
			nrClienti --;
			call fornaio.fineServizio;
	
	od
}

process fornaio{ 
	entry turno[0,MAX-1];	
	entry ordinazione(in Ordine ordine);
	entry servizio(out Spesa spesa);
	int bigliettoDaServire;
	Ordine nuovoOrdine;
	Spesa nuovaSpesa;

	loop forever
		call biglietteria.prossimoCliente(bigliettoDaServire);
		accept turno[bigliettoDaServire];
		accept ordinazione(in Ordine ordine) {
			nuovoOrdine = ordine
		};
		nuovaSpesa = <prepara ordine nuovoOrdine>
		accept servizio(out Spesa spesa){
			spesa = nuovaSpesa;
		};
		accept fineServizio;
}

process cliente[i]{
	int mioNumero;
	Ordine ordine;
	Spesa spesa;	

	call biglietteria.prendiNumero(mioNumero);
	call fornario.turno[mioNumero];
	ordine = <prepara ordine>
	call fornaio.ordinazione(ordine);
	call fornaio.servizio(spesa);
	call biglietteria.uscitaCliente;
}
